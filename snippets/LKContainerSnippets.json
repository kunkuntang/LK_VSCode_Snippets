{
  "Lk Create Page Container": {
    "prefix": "LKContainerPage",
    "body": [
      "import { Component, Vue } from \"vue-property-decorator\";",
      "",
      "@Component({",
      "  name: \"${1:PageName}\",",
      "})",
      "class ${1:PageName} extends Vue {",
      "",
      "  render() {",
      "    return <div></div>;",
      "  }",
      "}",
      "",
      "export default ${1:PageName};"
    ],
    "description": "LK Create Page Container"
  },

  "HL Create Form Config Container": {
    "prefix": "LKContainerFormConfig",
    "body": [
      "const lkFormItemUtils = new LkFormItemUtils()",
      "",
      "class ${1:FormName}FormItemConfigFactory {",
      "  that!: Vue",
      "  constructor(_this: Vue) {",
      "    this.that = _this",
      "  }",
      "",
      "  FormItemConfig = [",
      "    lkFormItemUtils.renderInputFormItem(",
      "      {",
      "        label: '${1}'",
      "      },",
      "      new LkInputConfig({",
      "        size: 'default'",
      "      }),",
      "      {",
      "        name: '${2}'",
      "      }",
      "    ),",
      "  ]",
      "}",
      "export default ${1:FormName}FormItemConfigFactory;"
    ],
    "description": "LK Create Form Config Container"
  },

  "Create HL Form Field Config Container": {
    "prefix": "HLContainerFormField",
    "body": [
      "import { FormRuleProperty, createFormRule } from 'hoolinks/form-rule';",
      "import { mapFields } from '../../../common/utils/fields';",
      "import { BaseFormFields, IBaseFormFields } from 'hoolinks-legion-design/lib/models/BaseFormFields';",
      "",
      "$BLOCK_COMMENT_START 表单字段类 $BLOCK_COMMENT_END",
      "export class ${1:FormFieldName}FormFields extends BaseFormFields {",
      "    ${0}",
      "    ",
      "    constructor(form?: ${1}FormFields) {",
      "        super()",
      "        mapFields.call(this, form);",
      "    }",
      "",
      "    static getFormFields(form: ${1}FormFields) {",
      "        let obj = new ${1}FormFields();",
      "        Object.keys(obj).forEach(item => {",
      "            obj[item] = form[item];",
      "        });",
      "        return obj;",
      "    }",
      "}",
      "",
      "$BLOCK_COMMENT_START 表单规则类 $BLOCK_COMMENT_END",
      "export class ${1}FormRule extends ${1}FormFields {",
      "    constructor(form?: ${1}FormFields) {",
      "        super(form);",
      "        createFormRule(${1}FormFields, this);",
      "    }",
      "}"
    ],
    "description": "Create HL Form Field Config Container"
  },

  "HL Create Table Columns Config Container": {
    "prefix": "HLContainerTableColumns",
    "body": [
      "import React from 'react';",
      "import { ITableColumnConfigProps } from 'hoolinks-legion-design/lib/typings/antd';",
      "",
      "export const ${1:TableName} = (_this: ${2:PageClass}): ITableColumnConfigProps[] => {",
      "    return [",
      "        ${0}",
      "    ]",
      "}"
    ],
    "description": "HL Create Table Columns Config Container"
  },

  "Create HL QueryConditions Config": {
    "prefix": "HLContainerQueryConditionsConfig",
    "body": [
      "import { IQuery } from 'hoolinks-legion-design/lib/typings/components';",
      "",
      "export const ${1:QueryConditionName} = (_this: ${2:PageClass}): Array<IQuery> => {",
      "    return [",
      "    ${0}",
      "        {",
      "            container: {",
      "                position: 'right',",
      "                component: {",
      "                    hooks: [",
      "                        {",
      "                            name: 'onSearch',",
      "                            handle: (value, viewModel) => {},",
      "                        },",
      "                        {",
      "                            name: 'onReset',",
      "                            handle: (value, viewModel) => {},",
      "                        },",
      "                    ],",
      "                },",
      "            },",
      "        },",
      "    ];",
      "}"
    ],
    "description": "HL Create QueryConditions Config"
  },

  "Create HL Store Container": {
    "prefix": "HLContainerStore",
    "body": [
      "import StoreBase, { IStoreBaseMeta } from '../../common/stores/StoreBase';",
      "import { observable, action, computed } from 'mobx';",
      "import { observablePromise } from 'brain-store-utils';",
      "",
      "export default class ${1:StoreName} extends StoreBase {",
      "    static meta: IStoreBaseMeta = {",
      "        ...StoreBase.meta,",
      "        className: '${1}',",
      "        contextTypes: {},",
      "    };",
      "    ",
      "    ${0}",
      "}"
    ],
    "description": "Create HL Store Container"
  },

  "HL Create Table Columns Item": {
    "prefix": "HLCreateTableColumnsItem",
    "body": [
      "{",
      "    title: '${1:title}',",
      "    width: 120,",
      "    tooltip: ${2|true,false|},",
      "    dataIndex: '${3:dataIndex}',",
      "},"
    ],
    "description": "HL Create Table Columns Item"
  },

  "Create HL FormField Rule": {
    "prefix": "HLCreateFormFieldRule",
    "body": [
      "$BLOCK_COMMENT_START 表单规则类 $BLOCK_COMMENT_END",
      "export class ${1}FormRules extends ${1}FormFields {",
      "    constructor(form?: ${1}FormFields) {",
      "        super(form);",
      "        createFormRule(${1}FormFields, this);",
      "    }",
      "}"
    ],
    "description": "Create HL FormField Rule"
  },

  "Create HL FormField Extend Rule": {
    "prefix": "HLCreateFormFieldExtendRule",
    "body": [
      "$BLOCK_COMMENT_START 表单拓展规则类 $BLOCK_COMMENT_END",
      "class ${1:FormFieldName}FormExtendsRules extends ${1}FormFields {",
      "    /** 表单拓展规则 */",
      "    @FormRuleProperty({",
      "        required: true,",
      "        name: 'companyName1',",
      "        error: '',",
      "        desc: '表单拓展规则',",
      "        type: 'string',",
      "    })",
      "    companyName1: IBaseFormFields<string> = {",
      "        value: '',",
      "    };",
      "}",
      "",
      "$BLOCK_COMMENT_START 表单规则类 $BLOCK_COMMENT_END",
      "export class ${1}FormRule extends ${1}FormFields {",
      "    constructor(form?: ${1}FormFields) {",
      "        super(form);",
      "        createFormRule(${1}FormFields, this, ${1}FormExtendsRules);",
      "    }",
      "}"
    ],
    "description": "Create HL FormField Extend Rule"
  }
}