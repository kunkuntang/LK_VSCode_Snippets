{
  "Lk Create Page Container": {
    "prefix": "LKContainerPage",
    "body": [
      "import { Component, Vue } from \"vue-property-decorator\";",
      "",
      "@Component({",
      "  name: \"${1:PageName}\",",
      "})",
      "class ${1:PageName} extends Vue {",
      "",
      "  render() {",
      "    return <div></div>;",
      "  }",
      "}",
      "",
      "export default ${1:PageName};"
    ],
    "description": "LK Create Page Container"
  },

  "HL Create Form Config Container": {
    "prefix": "LKContainerFormConfig",
    "body": [
      "const lkFormItemUtils = new LkFormItemUtils()",
      "",
      "class ${1:FormName}FormItemConfigFactory {",
      "  that!: Vue",
      "  constructor(_this: Vue) {",
      "    this.that = _this",
      "  }",
      "",
      "  FormItemConfig = [",
      "    lkFormItemUtils.renderInputFormItem(",
      "      {",
      "        label: '${1}'",
      "      },",
      "      new LkInputConfig({",
      "        size: 'default'",
      "      }),",
      "      {",
      "        name: '${2}'",
      "      }",
      "    ),",
      "  ]",
      "}",
      "export default ${1:FormName}FormItemConfigFactory;"
    ],
    "description": "LK Create Form Config Container"
  },

  "LK Create Table Columns Config Container": {
    "prefix": "LKContainerTableColumns",
    "body": [
      "import { Column } from 'ant-design-vue/types/table/column';",
      "import { Component, Vue } from \"vue-property-decorator\";",
      "",
      "@Component",
      "export class ${1:表格名称}TableColumnsConfig extends Vue {",
      "  getConfig(that?: ${4:引用的Vue类实例}): Partial<Column>[] {",
      "    return [",
      "      {",
      "        title: \"${2}\",",
      "        dataIndex: \"${3}\",",
      "        key: \"${3}\",",
      "      },",
      "    ]",
      "  }",
      "}"
    ],
    "description": "创建表格列模板代码"
  },

  "Create HL QueryConditions Config": {
    "prefix": "HLContainerQueryConditionsConfig",
    "body": [
      "import { IQuery } from 'hoolinks-legion-design/lib/typings/components';",
      "",
      "export const ${1:QueryConditionName} = (_this: ${2:PageClass}): Array<IQuery> => {",
      "    return [",
      "    ${0}",
      "        {",
      "            container: {",
      "                position: 'right',",
      "                component: {",
      "                    hooks: [",
      "                        {",
      "                            name: 'onSearch',",
      "                            handle: (value, viewModel) => {},",
      "                        },",
      "                        {",
      "                            name: 'onReset',",
      "                            handle: (value, viewModel) => {},",
      "                        },",
      "                    ],",
      "                },",
      "            },",
      "        },",
      "    ];",
      "}"
    ],
    "description": "HL Create QueryConditions Config"
  },

  "Create LK Store Container": {
    "prefix": "LKContainerStore",
    "body": [
      "import { getModule, Module, VuexModule } from \"vuex-module-decorators\";",
      "import store from \"../index\";",
      "",  
      "  @Module({",
      "    name: '${0}',",
      "    dynamic: true,",
      "    namespaced: true,",
      "    store,",
      "  })",
      "  class ${1}StoreModule extends VuexModule {",
      "  }",
      "  ",
      "  export const ${1}TagStore = getModule(${1}StoreModule);"
    ],
    "description": "Create LK Store Container"
  }
}