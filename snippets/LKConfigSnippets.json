{
  "HL Create Config Container": {
    "prefix": "LKCreateContainerConfig",
    "body": [
      "import { LkFormItemUtils} from \"@qunyou/lk-components-antdv\"",
      "const lkFormItemUtils = new LkFormItemUtils()",
      "",
      "export class ${1:FormName}FormItemConfigFactory {",
      "  that!: Vue",
      "  constructor(_this: Vue) {",
      "    this.that = _this",
      "  }",
      " /** ${3:name} */",
      "  FormItemConfig = [",
      "   lkFormItemUtils.render${2}FormItem( //更改需要的配置项",
      "     {",
      "       label: '${3}'",
      "     },",
      "     new Lk${2}Config({",
      "       size: 'default',",
      "       placeholder: '请输入${3}'",
      "     }),",
      "     {",
      "       name: '${4}'",
      "     }",
      "   ),",
      "]",
      "${5:/*",
      "* 多级下拉框 Cascader",
      "* 开关 Switch",
      "* 日历选择器 DatePicker",
      "* 时间选择器 TimePicker",
      "* 自定义表单 Custom",
      "* 单选框 RadioGroup",
      "* 多选框 CheckboxGroup",
      "* 下拉框 Select",
      "* 输入框 Input",
      "* 数字输入框 InputNumber",
      "* 树形下拉选择 TreeSelect",
      "* 自定义 Custom",
      "*/}",
      "}"
    ],
    "description": "创建表单配置容器"
  },
  "HL Create From Config": {
    "prefix": "LKCreateFormConfig",
    "body": [
      "   lkFormItemUtils.render${1}FormItem( //更改需要的配置项",
      "     {",
      "       label: '${2}'",
      "     },",
      "     new Lk${1}Config({",
      "       size: 'default',",
      "       placeholder: '请输入${2}'",
      "     }),",
      "     {",
      "       name: '${3}'",
      "     }",
      "   ),",
      "${4:/*",
      "* 多级下拉框 Cascader",
      "* 开关 Switch",
      "* 日历选择器 DatePicker",
      "* 时间选择器 TimePicker",
      "* 自定义表单 Custom",
      "* 单选框 RadioGroup",
      "* 多选框 CheckboxGroup",
      "* 下拉框 Select",
      "* 输入框 Input",
      "* 数字输入框 InputNumber",
      "* 自定义 Custom",
      "*/}"
    ],
    "description": "渲染表单项配置"
  },
  "HL Create Config Extends Vue Container": {
    "prefix": "LKCreateContainerExtendsVueConfig",
    "body": [
      "import { Vue, Component } from 'vue-property-decorator';",
      "import { LkFormItemUtils} from \"@qunyou/lk-components-antdv\"",
      "",
      "const lkFormItemUtils = new LkFormItemUtils()",
      "@Component({})",
      "export class ${1}FromItem extends Vue {",
      "  FormItemConfig = [",
      "   lkFormItemUtils.render${2}FormItem( //更改需要的配置项",
      "     {",
      "       label: '${3}'",
      "     },",
      "     new Lk${2}Config({",
      "       size: 'default',",
      "       placeholder: '请输入${3}'",
      "     }),",
      "     {",
      "       name: '${4}'",
      "     }",
      "   ),",
      "]",
      "${5:/*",
      "* 多级下拉框 Cascader",
      "* 开关 Switch",
      "* 日历选择器 DatePicker",
      "* 时间选择器 TimePicker",
      "* 自定义表单 Custom",
      "* 单选框 RadioGroup",
      "* 多选框 CheckboxGroup",
      "* 下拉框 Select",
      "* 输入框 Input",
      "* 数字输入框 InputNumber",
      "* 自定义 Custom",
      "*/}",
      "}"
    ],
    "description": "创建继承vue表单配置容器"
  },
  "HL Create Custom From Config": {
    "prefix": "LKCreateCustomFormConfig",
    "body": [
      "lkFormItemUtils.renderCustomFormItem(",
      "  {",
      "     label: \"${1}\",",
      "   },",
      "  {",
      "     renderJSX: () => {",
      "       return (",
      "           <div></div>",
      "       );",
      "     },",
      "   }",
      ")"
    ],
    "description": "渲染自定义表单项配置"
  },
  "HL Create Table Columns Config": {
    "prefix": "LKCreateTableColumnsConfig",
    "body": [
      "import { installVueComponent } from '@/utils';",
      "import { Component, Vue } from \"vue-property-decorator\";",
      "@Component({",
      "    components: {",
      "        ...installVueComponent([])",
      "    }",
      "})",
      "export class ${1}ColumnsConfig extends Vue {",
      "    config() {",
      "        return [",
      "           {",
      "               title: '${2}',",
      "               dataIndex: '${3}',",
      "           },",
      "           {",
      "               title: '操作',",
      "               customRender: (text: string, row: any, index: number) => {",
      "                   return <div></div>",
      "                }",
      "            }",
      "         ]",
      "     }",
      "}"
    ],
    "description": "渲染表格标头配置"
  }

}
